# docker-compose.dev.yml
# Used for local development and debugging
# Started by VS Code tasks.json for local debugging

services:
  postgres:
    container_name: airweave-db
    image: postgres:16
    environment:
      POSTGRES_DB: airweave
      POSTGRES_USER: airweave
      POSTGRES_PASSWORD: airweave1234!
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U airweave" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: airweave-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  text2vec-transformers:
    container_name: airweave-embeddings
    image: semitechnologies/transformers-inference:sentence-transformers-all-MiniLM-L6-v2
    ports:
      - "9878:8080"
    environment:
      ENABLE_CUDA: 0
      WORKERS_PER_NODE: 1
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8080/health" ]
      interval: 5s
      timeout: 10s
      retries: 3
    restart: on-failure

  qdrant:
    container_name: airweave-qdrant
    image: qdrant/qdrant:latest
    command: bash -c "apt-get update && apt-get install -y curl && ./entrypoint.sh" # we need to install curl to check health
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:6333/healthz" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: on-failure

  temporal:
    container_name: airweave-temporal
    image: temporalio/auto-setup:1.24.2
    ports:
      - "7233:7233"
      - "8233:8233"
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=airweave
      - POSTGRES_PWD=airweave1234!
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    volumes:
      - ./temporal-config:/etc/temporal/config/dynamicconfig
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "tctl", "--address", "temporal:7233", "workflow", "list" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

  temporal-worker:
    container_name: airweave-temporal-worker
    build:
      context: ../backend
      dockerfile: Dockerfile
    # Import all variables from .env file (same pattern as production backend)
    env_file:
      - ../.env
    # These variables override any from .env file
    # Required for container networking (services refer to container names, not localhost)
    environment:
      # Override any localhost references for container networking
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - TEXT2VEC_INFERENCE_URL=http://text2vec-transformers:8080
      # These ensure services run properly inside containers
      - LOCAL_DEVELOPMENT=false
      # Temporal configuration
      - TEMPORAL_HOST=temporal
      - TEMPORAL_PORT=7233
      - TEMPORAL_NAMESPACE=default
      - TEMPORAL_TASK_QUEUE=airweave-sync-queue
      - TEMPORAL_ENABLED=true
    volumes:
      - ../backend:/app
    entrypoint: [ "python", "-m", "airweave.platform.temporal.worker" ]
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
