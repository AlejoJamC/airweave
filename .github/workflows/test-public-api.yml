name: Public API Test

on:
  pull_request_target: # Need access to secrets
    branches: [main]
  push:
    branches: [main]

jobs:
  test-public-api:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Verify prerequisites
        run: |
          echo "Docker version:"
          docker --version
          echo "Docker Compose version:"
          docker compose version

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          cd backend
          pip install -r tests/e2e/requirements.txt

      - name: Build test images locally
        run: |
          echo "Building backend image for testing..."
          docker build -t test-backend:latest ./backend
          echo "Building frontend image for testing..."
          docker build -t test-frontend:latest ./frontend

      - name: Run E2E Smoke Tests
        env:
          TEST_ENV: local
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TEST_STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
          # Required test environment variables
          TEST_NOTION_TOKEN: ${{ secrets.TEST_NOTION_TOKEN }}
          TEST_GOOGLE_CLIENT_ID: ${{ secrets.TEST_GOOGLE_CLIENT_ID }}
          TEST_GOOGLE_CLIENT_SECRET: ${{ secrets.TEST_GOOGLE_CLIENT_SECRET }}
          TEST_AUTH_PROVIDER_NAME: composio
          TEST_COMPOSIO_API_KEY: ${{ secrets.TEST_COMPOSIO_API_KEY }}
          # Composio service-specific configurations
          TEST_COMPOSIO_TODOIST_AUTH_CONFIG_ID: ac_wcspYMD22UDD
          TEST_COMPOSIO_TODOIST_ACCOUNT_ID: ca_h1xDM7cdVzeI
          TEST_COMPOSIO_ASANA_AUTH_CONFIG_ID: ac_hBi29B_-iU3B
          TEST_COMPOSIO_ASANA_ACCOUNT_ID: ca_ooqwRcKOwHmo
          TEST_COMPOSIO_GMAIL_AUTH_CONFIG_ID: ac_HocwjtTv-dqb
          TEST_COMPOSIO_GMAIL_ACCOUNT_ID: ca_jEA4l17nSPzN
          # Pipedream configurations
          TEST_PIPEDREAM_CLIENT_ID: ${{ secrets.TEST_PIPEDREAM_CLIENT_ID }}
          TEST_PIPEDREAM_CLIENT_SECRET: ${{ secrets.TEST_PIPEDREAM_CLIENT_SECRET }}
          TEST_PIPEDREAM_PROJECT_ID: ${{ secrets.TEST_PIPEDREAM_PROJECT_ID }}
          TEST_PIPEDREAM_ACCOUNT_ID: ${{ secrets.TEST_PIPEDREAM_ACCOUNT_ID }}
          TEST_PIPEDREAM_EXTERNAL_USER_ID: ${{ secrets.TEST_PIPEDREAM_EXTERNAL_USER_ID }}
          # Override images to use locally built test images
          BACKEND_IMAGE: test-backend:latest
          FRONTEND_IMAGE: test-frontend:latest
        run: |
          cd backend
          pytest tests/e2e/smoke -n 4 -v --tb=short

      - name: Cleanup Docker containers
        if: always()
        run: |
          echo "Cleaning up Docker containers..."
          docker compose down -v || true
          docker system prune -f || true
