name: Monke Gmail + Drive (matrix)

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'monke/**'
      - '.github/workflows/monke-matrix.yml'
  push:
    branches: [ main, feat/monke ]

jobs:
  monke:
    # Two parallel runners — one per connector
    runs-on: ubuntu-latest
    environment: dev

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        connector: [ gmail, google_drive ]
        include:
          - connector: gmail
            config: monke/configs/gmail.yaml
            log_file: logs/gmail.rich.log
          - connector: google_drive
            config: monke/configs/google_drive.yaml
            log_file: logs/drive.rich.log

    # Common env (adjust to your auth setup)
    env:
      AIRWEAVE_API_URL: http://localhost:8001
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      # If you use Composio broker (recommended for gmail/drive in these configs):
      DM_AUTH_PROVIDER: composio
      DM_AUTH_PROVIDER_API_KEY: ${{ secrets.COMPOSIO_API_KEY }}
      # Optional: per-connector account/config IDs (uncomment + set secrets if needed)
      GMAIL_AUTH_PROVIDER_ACCOUNT_ID: ${{ secrets.GMAIL_AUTH_PROVIDER_ACCOUNT_ID }}
      GMAIL_AUTH_PROVIDER_AUTH_CONFIG_ID: ${{ secrets.GMAIL_AUTH_PROVIDER_AUTH_CONFIG_ID }}
      GOOGLE_DRIVE_AUTH_PROVIDER_ACCOUNT_ID: ${{ secrets.GOOGLE_DRIVE_AUTH_PROVIDER_ACCOUNT_ID }}
      GOOGLE_DRIVE_AUTH_PROVIDER_AUTH_CONFIG_ID: ${{ secrets.GOOGLE_DRIVE_AUTH_PROVIDER_AUTH_CONFIG_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: monke/requirements.txt

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r monke/requirements.txt

      # ── Airweave backend prerequisite you provided ─────────────────────────────
      - name: Start Airweave backend
        run: |
          printf 'n\nn\n' | ./start.sh

      - name: Wait for Airweave backend health
        run: |
          for i in {1..60}; do
            if curl -fsS http://localhost:8001/health >/dev/null; then
              echo "✅ Airweave backend is healthy"
              exit 0
            fi
            echo "Waiting for Airweave backend... ($i/60)"
            sleep 2
          done
          echo "❌ Airweave backend failed to become healthy"
          exit 1
      # ───────────────────────────────────────────────────────────────────────────

      - name: Create logs dir
        run: mkdir -p logs

      - name: Run Monke ${{ matrix.connector }} test (log file only)
        run: |
          python ci_run_single.py --config "${{ matrix.config }}" --log-file "${{ matrix.log_file }}"

      - name: Upload artifacts (logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: monke-${{ matrix.connector }}-logs
          path: |
            logs/**
