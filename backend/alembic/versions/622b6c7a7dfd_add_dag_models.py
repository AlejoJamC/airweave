"""add dag models

Revision ID: 622b6c7a7dfd
Revises: 557b57f158cb
Create Date: 2025-02-17 15:49:54.202234

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "622b6c7a7dfd"
down_revision = "557b57f158cb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sync_dag",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("sync_id", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.Column("created_by_email", sa.String(), nullable=False),
        sa.Column("modified_by_email", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by_email"],
            ["user.email"],
        ),
        sa.ForeignKeyConstraint(
            ["modified_by_email"],
            ["user.email"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sync_id"],
            ["sync.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("sync_id", name="uq_sync_dag_def_sync_id"),
    )
    op.create_table(
        "dag_node",
        sa.Column("dag_id", sa.UUID(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.Column("connection_id", sa.UUID(), nullable=True),
        sa.Column("source_id", sa.UUID(), nullable=True),
        sa.Column("destination_id", sa.UUID(), nullable=True),
        sa.Column("transformer_id", sa.UUID(), nullable=True),
        sa.Column("entity_id", sa.UUID(), nullable=True),
        sa.Column("position_x", sa.String(), nullable=True),
        sa.Column("position_y", sa.String(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.Column("created_by_email", sa.String(), nullable=False),
        sa.Column("modified_by_email", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["connection_id"],
            ["connection.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by_email"],
            ["user.email"],
        ),
        sa.ForeignKeyConstraint(
            ["dag_id"],
            ["sync_dag.id"],
        ),
        sa.ForeignKeyConstraint(
            ["destination_id"],
            ["destination.id"],
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"],
            ["entity_definition.id"],
        ),
        sa.ForeignKeyConstraint(
            ["modified_by_email"],
            ["user.email"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["source.id"],
        ),
        sa.ForeignKeyConstraint(
            ["transformer_id"],
            ["transformer.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dag_edge",
        sa.Column("dag_id", sa.UUID(), nullable=False),
        sa.Column("from_node_id", sa.UUID(), nullable=False),
        sa.Column("to_node_id", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.Column("created_by_email", sa.String(), nullable=False),
        sa.Column("modified_by_email", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by_email"],
            ["user.email"],
        ),
        sa.ForeignKeyConstraint(
            ["dag_id"],
            ["sync_dag.id"],
        ),
        sa.ForeignKeyConstraint(
            ["from_node_id"],
            ["dag_node.id"],
        ),
        sa.ForeignKeyConstraint(
            ["modified_by_email"],
            ["user.email"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.ForeignKeyConstraint(
            ["to_node_id"],
            ["dag_node.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("dag_id", "from_node_id", "to_node_id", name="uq_dag_edge_from_to"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("dag_edge")
    op.drop_table("dag_node")
    op.drop_table("sync_dag")
    # ### end Alembic commands ###
