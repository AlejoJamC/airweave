"""dag_models

Revision ID: 557b57f158cb
Revises: 1fb5731c172e
Create Date: 2025-02-17 10:29:16.320944

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "557b57f158cb"
down_revision = "1fb5731c172e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "entity_definition",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("type", sa.Enum("FILE", "JSON", name="entitytype"), nullable=False),
        sa.Column("schema", sa.JSON(), nullable=False),
        sa.Column("parent_id", sa.UUID(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id"], ["organization.id"], name="fk_entity_definition_organization"
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"], ["entity_definition.id"], name="fk_entity_definition_parent"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "organization_id", name="uq_entity_definition_name_org"),
    )
    op.create_table(
        "transformer",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("input_entity_definition_ids", sa.JSON(), nullable=False),
        sa.Column("output_entity_definition_ids", sa.JSON(), nullable=False),
        sa.Column("config_schema", sa.JSON(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id"], ["organization.id"], name="fk_transformer_organization"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "entity_relation",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("from_entity_definition_id", sa.UUID(), nullable=False),
        sa.Column("to_entity_definition_id", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id"], ["organization.id"], name="fk_entity_relation_organization"
        ),
        sa.ForeignKeyConstraint(
            ["from_entity_definition_id"], ["entity_definition.id"], name="fk_entity_relation_from"
        ),
        sa.ForeignKeyConstraint(
            ["to_entity_definition_id"], ["entity_definition.id"], name="fk_entity_relation_to"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "destination", sa.Column("input_entity_definition_ids", sa.JSON(), nullable=False)
    )
    op.add_column("destination", sa.Column("config_schema", sa.JSON(), nullable=False))
    op.add_column("destination", sa.Column("organization_id", sa.UUID(), nullable=True))
    op.create_unique_constraint(
        "uq_destination_name_org", "destination", ["name", "organization_id"]
    )
    op.create_foreign_key(
        "fk_destination_organization", "destination", "organization", ["organization_id"], ["id"]
    )
    op.add_column("source", sa.Column("output_entity_definition_ids", sa.JSON(), nullable=False))
    op.add_column("source", sa.Column("config_schema", sa.JSON(), nullable=False))
    op.add_column("source", sa.Column("organization_id", sa.UUID(), nullable=True))
    op.alter_column(
        "source", "description", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True
    )
    op.drop_constraint("source_name_key", "source", type_="unique")
    op.create_unique_constraint("uq_source_name_org", "source", ["name", "organization_id"])

    op.create_foreign_key(
        "fk_source_organization", "source", "organization", ["organization_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_source_organization", "source", type_="foreignkey")

    op.drop_constraint("uq_source_name_org", "source", type_="unique")
    op.create_unique_constraint("source_name_key", "source", ["name"])
    op.alter_column(
        "source", "description", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True
    )
    op.drop_column("source", "organization_id")
    op.drop_column("source", "config_schema")
    op.drop_column("source", "output_entity_definition_ids")

    op.drop_constraint("fk_destination_organization", "destination", type_="foreignkey")

    op.drop_constraint("uq_destination_name_org", "destination", type_="unique")
    op.drop_column("destination", "organization_id")
    op.drop_column("destination", "config_schema")
    op.drop_column("destination", "input_entity_definition_ids")

    # Drop tables in correct order (respect foreign key dependencies)
    op.drop_table("entity_relation")
    op.drop_table("transformer")
    op.drop_table("entity_definition")
    op.execute("DROP TYPE entitytype")
    # ### end Alembic commands ###
